{"version":3,"sources":["components/Home.js","components/SearchIngredient.js","components/CardContainer.js","components/Card.js","components/RecipeGrid.js","components/RecipeDrawer.js","components/Results.js","components/SearchKeyword.js","components/Bento.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","SearchIngredient","props","ingredChanged","event","setState","ingredients","target","value","searchRecipe","fetch","then","response","json","renderRecipes","recipes","results","state","type","this","onChange","placeholder","onClick","map","recipe","index","key","title","React","Component","CardContainer","posed","div","enter","y","opacity","delay","i","console","log","transition","stiffness","damping","default","duration","exit","Card","setDrawer","style","height","width","margin","display","flexDirection","alignItems","backgroundColor","cursor","borderRadius","backgroundImage","image","backgroundSize","backgroundPosition","fontWeight","fontSize","color","bottom","readyInMinutes","RecipeGrid","grid","res","row","length","push","formatGrid","useState","isVisible","setIsVisible","useEffect","position","top","overflow","justifyContent","j","RecipeDrawer","marginLeft","marginTop","Results","drawer","isOpen","onClose","size","SearchKeyword","keywordChanged","keyword","Bento","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6041eede.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Home = () =>\n            <div>\n                <h1>Welcome Home</h1>\n\n                <div className=\"bento-list list-group\">\n\n                    <Link className=\"bento-list-item list-group-item\"\n                          to=\"/keyword\">\n                        Search by Keyword\n                    </Link>\n\n                    <Link className=\"bento-list-item list-group-item\"\n                          to=\"/ingredient\">\n                        Search by Ingredient\n                    </Link>\n                </div>\n            </div>;\n\nexport default Home;","import React from \"react\";\n\nclass SearchIngredient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: [],\n            recipes: []\n        }\n    }\n\n    ingredChanged = event =>\n        this.setState({ingredients: event.target.value});\n\n    searchRecipe = () =>\n        //console.log(this.state.ingredients);\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=10&ranking=1&ignorePantry=true&ingredients=apples%252Cflour%252Csugar`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"52626cfb7bmsh72c1608e1117baep1b0596jsnd117a4593bba\"\n            }\n        }).then(response => response.json())\n            .then(this.renderRecipes);\n\n    renderRecipes = (response) => {\n        this.setState({\n            recipes: response.results\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Search by Ingredient</h2>\n                <div className=\"input-group\">\n                    <input type=\"text\"\n                           value={this.state.ingredients}\n                           onChange={this.ingredChanged}\n                           className=\"form-control\"\n                           placeholder=\"ingredients\"/>\n                    <div className=\"input-group-append\">\n                        <button onClick={this.searchRecipe} className=\"btn btn-primary\">\n                            Search\n                        </button>\n                    </div>\n                </div>\n\n                <div>\n                    <ul className=\"list-group\">\n                        {\n                            this.state.recipes.map(\n                                (recipe, index) =>\n                                    <li key={index} className=\"list-group-item\">\n                                        {recipe.title}\n                                    </li>\n                            )\n                        }\n                    </ul>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SearchIngredient;","import React from \"react\";\nimport posed, {PoseGroup} from 'react-pose';\n\nconst CardContainer = posed.div({\n    enter: {\n        y: 0,\n        opacity: 1,\n        delay: ({ i }) => {\n            console.log(i);\n            return 300 + (i * 200);\n        },\n        transition: {\n            y: { type: 'spring', stiffness: 1000, damping: 15 },\n            default: { duration: 300 }\n        }\n    },\n    exit: {\n        y: 20,\n        opacity: 0,\n    },\n});\n\nexport default CardContainer;","import React from \"react\";\n\nfunction Card({recipe, setDrawer}) {\n    return(\n        <div className='tile'>\n            <div style={{height:'300px', width:'300px', margin: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', backgroundColor:'#ffffff', cursor: 'pointer'}}\n                 onClick={() => setDrawer(recipe)}>\n                <div style={{height:'150px', width:'150px',borderRadius: '50%', backgroundImage: `url(${recipe.image})`, backgroundSize: 'cover', backgroundPosition: 'center', margin: '13px'}}/>\n                <div style={{fontWeight: 'bold', fontSize: '20px', margin: '10px', color:'#9b9b9b'}}>{recipe.title}</div>\n                <div style={{margin: '10px', fontSize: '15px', bottom:'0', color:'#848484'}}>Ready in: {recipe.readyInMinutes} minutes</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport posed, {PoseGroup} from 'react-pose';\nimport CardContainer from \"./CardContainer\";\nimport Card from \"./Card\";\n\nconst rowSize = 4;\n\nfunction RecipeGrid({recipes, setDrawer}) {\n    const grid = formatGrid(recipes);\n    console.log(grid);\n    const [isVisible, setIsVisible] = React.useState(false);\n    React.useEffect(() => recipes.length > 0 ? setIsVisible(true) : setIsVisible(false), [recipes, setIsVisible]);\n\n    return (\n        <div style={{position: 'absolute', width: '100%', top: '25vh', height: '75vh', overflow: 'scroll'}}>\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\n                    <PoseGroup>\n                        {grid.map((row, i) =>\n                            <div style={{display: 'flex', flexDirection: 'row'}} key={i}>\n                                <PoseGroup>\n                                    {isVisible && row.map((recipe, j) => <CardContainer i={i * rowSize + j} key={j}><Card recipe={recipe} setDrawer={setDrawer} /></CardContainer>)}\n                                </PoseGroup>\n                            </div>)}\n                    </PoseGroup>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction formatGrid(recipes) {\n    console.log(recipes);\n    const res = [];\n    let row = [];\n    for (let i = 0; i < recipes.length; i++) {\n        row.push(recipes[i]);\n        if ((i + 1) % rowSize === 0) {\n            res.push(row);\n            row = [];\n        }\n    }\n    if (row.length > 0) {\n        res.push(row);\n    }\n    return res;\n}\n\nexport default RecipeGrid;","import React from \"react\";\n\nfunction RecipeDrawer({recipe}) {\n    return (\n        <div style={{position: 'absolute', height: '99vh', overflow: 'scroll'}}>\n            <div style={{height: '300px', width:'420px', backgroundImage: `url(${recipe.image})`,\n                backgroundSize: 'cover', backgroundPosition: 'center', margin: '30px', marginLeft: '40px', justifyContent: 'center', alignItems: 'center'}}>\n            </div>\n            <div>\n                <div style={{marginLeft:'40px', marginTop: '15px', fontSize:'30px', fontWeight:'bold', color:'#9b9b9b'}}>{recipe.title}</div>\n                <div style={{marginLeft:'40px', marginTop: '8px', fontSize:'15px', color:'#9b9b9b'}}>Ready in: {recipe.readyInMinutes} minutes</div>\n            </div>\n        </div>\n    )\n}\n\nexport default RecipeDrawer;","import React from 'react';\nimport {Drawer} from '@blueprintjs/core';\nimport RecipeGrid from \"./RecipeGrid\";\nimport RecipeDrawer from \"./RecipeDrawer\";\n\nexport default function Results({recipes}) {\n    const [drawer, setDrawer] = React.useState(null);\n    return (\n        <div>\n            <RecipeGrid recipes={recipes} setDrawer={setDrawer}/>\n            <Drawer isOpen={!!drawer} onClose={() => setDrawer(null)} size='500px'>\n                {drawer ? (\n                    <RecipeDrawer recipe={drawer} />\n                ) : <></>}\n            </Drawer>\n        </div>\n    )\n}","import React from \"react\";\nimport Results from \"./Results\";\n\n\nclass SearchKeyword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            keyword: \"\",\n            recipes: []\n        }\n    }\n\n    keywordChanged = event =>\n        this.setState({keyword: event.target.value});\n\n    searchRecipe = () =>\n        //console.log(this.state.keyword);\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?\n        &query=${this.state.keyword}`,\n            {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"52626cfb7bmsh72c1608e1117baep1b0596jsnd117a4593bba\"\n            }\n        }).then(response => response.json())\n            .then(this.renderRecipes);\n\n    renderRecipes = (response) => {\n        this.setState({\n            recipes: response.results\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Search by Keyword</h2>\n                <div className=\"input-group\">\n                    <input type=\"text\"\n                           value={this.state.keyword}\n                           onChange={this.keywordChanged}\n                           className=\"form-control\"\n                           placeholder=\"keyword\"/>\n                    <div className=\"input-group-append\">\n                        <button onClick={this.searchRecipe} className=\"btn btn-primary\">\n                            Search\n                        </button>\n                    </div>\n                </div>\n\n                <div>\n                    <Results recipes={this.state.recipes}/>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SearchKeyword;","import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SearchIngredient from \"./SearchIngredient\";\nimport SearchKeyword from \"./SearchKeyword\";\n\nclass Bento extends React.Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <h1>Bento</h1>\n                    <Route path=\"/\"\n                           exact={true}\n                           component={Home}/>\n\n                    <Route path=\"/ingredient\"\n                           exact={true}\n                           component={SearchIngredient}/>\n\n                    <Route path=\"/keyword\"\n                           exact={true}\n                           component={SearchKeyword}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Bento;","import React from 'react';\nimport './App.css';\nimport Bento from \"./components/Bento\";\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n       <Bento />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}